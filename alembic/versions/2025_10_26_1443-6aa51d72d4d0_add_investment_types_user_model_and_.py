"""Add investment types, user model, and enhanced fields

Revision ID: 6aa51d72d4d0
Revises: ec807a01fa35
Create Date: 2025-10-26 14:43:41.537535

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6aa51d72d4d0'
down_revision: Union[str, None] = 'ec807a01fa35'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add columns as nullable first
    op.add_column('investments', sa.Column('user_id', sa.Integer(), nullable=True))
    op.add_column('investments', sa.Column('investment_type', sa.Enum('STOCKS', 'CRYPTO', 'SHARES', 'GOLD', 'REAL_ESTATE', 'BONDS', 'OTHER', name='investmenttype', native_enum=False, length=50), nullable=True))
    op.add_column('investments', sa.Column('purchase_date', sa.Date(), nullable=True))
    op.add_column('investments', sa.Column('description', sa.Text(), nullable=True))
    
    # Set default values for existing rows
    op.execute("UPDATE investments SET investment_type = 'OTHER' WHERE investment_type IS NULL")
    op.execute("UPDATE investments SET purchase_date = created_at::date WHERE purchase_date IS NULL")
    
    # Now make columns non-nullable (except user_id and description which should remain nullable)
    op.alter_column('investments', 'investment_type', nullable=False)
    op.alter_column('investments', 'purchase_date', nullable=False)
    
    # Update indexes
    op.drop_index('ix_investments_symbol', table_name='investments')
    op.create_index(op.f('ix_investments_symbol'), 'investments', ['symbol'], unique=False)
    op.create_index(op.f('ix_investments_investment_type'), 'investments', ['investment_type'], unique=False)
    op.create_index(op.f('ix_investments_purchase_date'), 'investments', ['purchase_date'], unique=False)
    op.create_index(op.f('ix_investments_user_id'), 'investments', ['user_id'], unique=False)
    
    # Create users table
    op.create_table('users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('telegram_id', sa.BigInteger(), nullable=False),
        sa.Column('username', sa.String(length=255), nullable=True),
        sa.Column('first_name', sa.String(length=255), nullable=True),
        sa.Column('last_name', sa.String(length=255), nullable=True),
        sa.Column('photo_url', sa.String(length=500), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('last_login', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop users table
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    
    # Drop investments columns
    op.drop_index(op.f('ix_investments_user_id'), table_name='investments')
    op.drop_index(op.f('ix_investments_purchase_date'), table_name='investments')
    op.drop_index(op.f('ix_investments_investment_type'), table_name='investments')
    op.drop_index(op.f('ix_investments_symbol'), table_name='investments')
    op.create_index('ix_investments_symbol', 'investments', ['symbol'], unique=True)
    op.drop_column('investments', 'description')
    op.drop_column('investments', 'purchase_date')
    op.drop_column('investments', 'investment_type')
    op.drop_column('investments', 'user_id')
    # ### end Alembic commands ###

